use core::scalar

### Mathematical

let pi = 3.14159265358979323846264338327950288
let π = pi
let τ = 2 π
let e = 2.71828182845904523536028747135266250
let φ = 1.61803398874989484820458683436563811
let golden_ratio = φ

### Named numbers

#### Large numbers

@name("Hundred")
@url("https://en.wikipedia.org/wiki/100_(number)")
unit hundred = 100

@name("Thousand")
@url("https://en.wikipedia.org/wiki/1000_(number)")
unit thousand = 1_000

@name("Million")
@url("https://en.wikipedia.org/wiki/Million")
unit million = 1_000_000

@name("Billion")
@url("https://en.wikipedia.org/wiki/Billion")
unit billion = 10^9

@name("Trillion")
@url("https://en.wikipedia.org/wiki/Trillion")
unit trillion = 10^12

@name("Quadrillion")
@url("https://en.wikipedia.org/wiki/Quadrillion")
unit quadrillion = 10^15

@name("Quintillion")
@url("https://en.wikipedia.org/wiki/Quintillion")
unit quintillion = 10^18

let googol =  10^100

### Unicode fractions

let ½ = 1 / 2

let ⅓ = 1 / 3
let ⅔ = 2 / 3

let ¼ = 1 / 4
let ¾ = 3 / 4

let ⅕ = 1 / 5
let ⅖ = 2 / 5
let ⅗ = 3 / 5
let ⅘ = 4 / 5

let ⅙ = 1 / 6
let ⅚ = 5 / 6

let ⅐ = 1 / 7

let ⅛ = 1 / 8
let ⅜ = 3 / 8
let ⅝ = 5 / 8
let ⅞ = 7 / 8

let ⅑ = 1 / 9

let ⅒ = 1 / 10

#### Colloquial

let quarter = 1 / 4
let half = 1 / 2
let semi = 1 / 2
let double = 2
let triple = 3
unit dozen = 12
