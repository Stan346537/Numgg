@name("Identity function")
@description("Return the input value.")
fn id<A>(x: A) -> A = x

@name("Absolute value")
@description("Return the absolute value $|x|$ of the input. This works for quantities, too: `abs(-5 m) = 5 m`.")
@url("https://doc.rust-lang.org/std/primitive.f64.html#method.abs")
fn abs<T: Dim>(x: T) -> T

@name("Square root")
@description("Return the square root $\\sqrt\{x\}$ of the input: `sqrt(121 m^2) = 11 m`.")
@url("https://en.wikipedia.org/wiki/Square_root")
fn sqrt<D: Dim>(x: D^2) -> D = x^(1/2)

@name("Cube root")
@description("Return the cube root $\\sqrt[3]\{x\}$ of the input: `cbrt(8 m^3) = 2 m`.")
@url("https://en.wikipedia.org/wiki/Cube_root")
fn cbrt<D: Dim>(x: D^3) -> D = x^(1/3)

@name("Square function")
@description("Return the square of the input, $x^2$: `sqr(5 m) = 25 m^2`.")
fn sqr<D: Dim>(x: D) -> D^2 = x^2

@name("Rounding")
@description("Round to the nearest integer. If the value is half-way between two integers, round away from $0$.")
@url("https://doc.rust-lang.org/std/primitive.f64.html#method.round")
fn round<T: Dim>(x: T) -> T

@name("Floor function")
@description("Returns the largest integer less than or equal to $x$.")
@url("https://doc.rust-lang.org/std/primitive.f64.html#method.floor")
fn floor<T: Dim>(x: T) -> T

@name("Ceil function")
@description("Returns the smallest integer greater than or equal to $x$.")
@url("https://doc.rust-lang.org/std/primitive.f64.html#method.ceil")
fn ceil<T: Dim>(x: T) -> T

@name("Modulo")
@description("Calculates the least nonnegative remainder of $a (\\mod b)$.")
@url("https://doc.rust-lang.org/std/primitive.f64.html#method.rem_euclid")
fn mod<T: Dim>(a: T, b: T) -> T
